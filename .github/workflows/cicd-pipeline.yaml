name: CI/CD Pipeline

on:
  push:
    branches:
      - custom
  pull_request:
    branches:
      - custom
  release:
    types: [published]

jobs:
  get-datetime:
    runs-on: ubuntu-latest
    outputs:
      datetime: ${{ steps.datetime.outputs.datetime }}
      timestamp: ${{ steps.datetime.outputs.timestamp }}
      epoch: ${{ steps.datetime.outputs.epoch }}
    steps:
      - id: datetime
        run: |
          datetime=$(date -u +'%Y-%m-%dT%H:%M:%S%z')
          echo "datetime=$datetime" >> $GITHUB_OUTPUT
          echo "timestamp=$(date --date=$datetime -u +'%Y%m%d%H%M%S')" >> $GITHUB_OUTPUT
          echo "epoch=$(date --date=$datetime -u +'%s')" >> $GITHUB_OUTPUT
  # check-file-format:
  #   uses: ./.github/workflows/check-file-format.yaml
  # check-markdown-format:
  #   uses: ./.github/workflows/check-markdown-format.yaml
  cicd-pipeline-test:
    runs-on: ubuntu-latest
    needs: [get-datetime] # needs: [get-datetime, check-file-format, check-markdown-format]
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
      - name: List Variables
        run: |
          export BUILD_DATETIME="${{ needs.get-datetime.outputs.datetime }}"
          export BUILD_TIMESTAMP="${{ needs.get-datetime.outputs.timestamp }}"
          export BUILD_EPOCH="${{ needs.get-datetime.outputs.epoch }}"
          make list-variables
      # - name: Run Installation Test
      #   run: |
      #     ?
  cicd-pipeline-build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs: [get-datetime, cicd-pipeline-test]
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
      - name: List Variables
        run: |
          export BUILD_DATETIME="${{ needs.get-datetime.outputs.datetime }}"
          export BUILD_TIMESTAMP="${{ needs.get-datetime.outputs.timestamp }}"
          export BUILD_EPOCH="${{ needs.get-datetime.outputs.epoch }}"
          make list-variables
      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build Image
        run: |
          export VERBOSE=1
          export DOCKER_REPO=ghcr.io/
          make docker-build
          make docker-push
